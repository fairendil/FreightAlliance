<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectInventarizationDateText" xml:space="preserve">
    <value>Select inventarization date</value>
  </data>
  <data name="QuantityText" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="OkText" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="AddOrderPositionText" xml:space="preserve">
    <value>Add order position</value>
  </data>
  <data name="AmountText" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ApplicationController" xml:space="preserve">
    <value>ApplicationController</value>
  </data>
  <data name="CreateNewOrderText" xml:space="preserve">
    <value>Create new order</value>
  </data>
  <data name="DataManager" xml:space="preserve">
    <value>DataManager</value>
  </data>
  <data name="DeleteOrderPositionText" xml:space="preserve">
    <value>Delete order position</value>
  </data>
  <data name="DeleteOrderText" xml:space="preserve">
    <value>Delete order</value>
  </data>
  <data name="DescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="HomeText" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="InvoiceManager" xml:space="preserve">
    <value>InvoiceManager</value>
  </data>
  <data name="InvoiceText" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>Purchase</value>
  <comment>Purchase</comment></data>
  <data name="NewText" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="OrderCommentText" xml:space="preserve">
    <value>Order comment:</value>
  </data>
  <data name="OrderDateText" xml:space="preserve">
    <value>Order date:</value>
  </data>
  <data name="OrderPositionText" xml:space="preserve">
    <value>Order positions</value>
  </data>
  <data name="OrderStatus" xml:space="preserve">
    <value>Order status:</value>
  </data>
  <data name="OrderText" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="PersonNameText" xml:space="preserve">
    <value>Person name:</value>
  </data>
  <data name="PersonPostText" xml:space="preserve">
    <value>Person post:</value>
  </data>
  <data name="PriceText" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ReceivedDateText" xml:space="preserve">
    <value>Received date</value>
  </data>
  <data name="RemarksText" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="RequestDateText" xml:space="preserve">
    <value>Request date:</value>
  </data>
  <data name="RequestsText" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="SaveOrderPositionText" xml:space="preserve">
    <value>Save order position</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SupplierManager" xml:space="preserve">
    <value>SupplierManager</value>
  </data>
  <data name="SupplyForText" xml:space="preserve">
    <value>Supply for</value>
  </data>
  <data name="UnitText" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="UserText" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="VesselText" xml:space="preserve">
    <value>Vessel</value>
  </data>
  <data name="OrderNumberColumnText" xml:space="preserve">
    <value>Order №</value>
  </data>
  <data name="OrderStatusColumnText" xml:space="preserve">
    <value>Order status</value>
  </data>
  <data name="VesselColumnText" xml:space="preserve">
    <value>Vessel</value>
  </data>
  <data name="RequestDateColumnText" xml:space="preserve">
    <value>Request date</value>
  </data>
  <data name="OrderDateColumnText" xml:space="preserve">
    <value>Order date</value>
  </data>
  <data name="AllReceivedColumnText" xml:space="preserve">
    <value>All received</value>
  </data>
  <data name="SupplierColumnText" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="InvoiceColumnText" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="OrderTotalText" xml:space="preserve">
    <value>Order total</value>
  </data>
  <data name="CommentsColumnText" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="OrderTypeColumnText" xml:space="preserve">
    <value>Order type</value>
  </data>
  <data name="DeleteReasonColumnText" xml:space="preserve">
    <value>Delete reason</value>
  </data>
  <data name="DeleteDateColumnText" xml:space="preserve">
    <value>Delete date</value>
  </data>
  <data name="DateAtOfficeColumnText" xml:space="preserve">
    <value>Received at office</value>
  </data>
  <data name="ReceivedColumnText" xml:space="preserve">
    <value>Recieved</value>
  </data>
  <data name="PartNumberTypeColumnText" xml:space="preserve">
    <value>Part number type</value>
  </data>
  <data name="StoragePlaceColumnText" xml:space="preserve">
    <value>Storage place</value>
  </data>
  <data name="DrawingText" xml:space="preserve">
    <value>Drawing</value>
  </data>
  <data name="ManufacturedText" xml:space="preserve">
    <value>Manufactured</value>
  </data>
  <data name="PlateText" xml:space="preserve">
    <value>Plate</value>
  </data>
  <data name="ManufacturedYearText" xml:space="preserve">
    <value>Manufactured year</value>
  </data>
  <data name="PartSerialNumberText" xml:space="preserve">
    <value>Part serial number</value>
  </data>
  <data name="ConfirmText" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="SendText" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="ConfirmReceiptText" xml:space="preserve">
    <value>Confirm receipt</value>
  </data>
  <data name="SendForQuotationText" xml:space="preserve">
    <value>Send for quotation</value>
  </data>
  <data name="SelectInvoiceText" xml:space="preserve">
    <value>Select invoice</value>
  </data>
  <data name="NextStatusText" xml:space="preserve">
    <value>Next Status</value>
  </data>
  <data name="OpenReportText" xml:space="preserve">
    <value>Open report</value>
  </data>
  <data name="AddSparePartsOrderText" xml:space="preserve">
    <value>Add spare parts Order</value>
  </data>
  <data name="AddSupplyOrderText" xml:space="preserve">
    <value>Add supply Order</value>
  </data>
  <data name="AddOfferText" xml:space="preserve">
    <value>Add Offer</value>
  </data>
  <data name="DeleteOfferText" xml:space="preserve">
    <value>Delete Offer</value>
  </data>
  <data name="CodeText" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ItemCodeText" xml:space="preserve">
    <value>Item code</value>
  </data>
  <data name="PosInDrawningText" xml:space="preserve">
    <value>Position in Drawning</value>
  </data>
  <data name="CreationDateText" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="SentToOfficeDateText" xml:space="preserve">
    <value>Sent To Office Date</value>
  </data>
  <data name="ReceivedAtVesselDateText" xml:space="preserve">
    <value>Received At Vessel Date</value>
  </data>
  <data name="ReceivedAtOfficeDateText" xml:space="preserve">
    <value>Received At Office Date</value>
  </data>
  <data name="NeedOrderPositionText" xml:space="preserve">
    <value>Befor sending to the office. You must add positions</value>
  </data>
  <data name="WritenOffText" xml:space="preserve">
    <value>WritenOff</value>
  </data>
  <data name="InventarizationText" xml:space="preserve">
    <value>Inventarization</value>
  </data>
  <data name="MainText" xml:space="preserve">
    <value>Purchase</value>
  </data>
</root>